0) Set up a docker network 'dockernet'
$ docker network create --subnet 172.18.1.0/24 --gateway 172.18.1.254 dockernet

By default 'create.sh' and/or 'update.sh' allocates 172.18.1.3 to the database on hostname 'ar-server'
Add an ar-server entry to /etc/hosts:
172.18.1.3	ar-server

1) Install jq, npm and node/nodejs plus the 'request' and 'arangojs' modules.
On a Debian based system this looks something like:
$ sudo apt-get install jq npm
$ npm install request arangojs

2) Create an arangodb3 data-volume container
$ docker run -d --name arangodb3-persist -v /var/lib/arangodb3 busybox true

3) Customise variables in the update.sh shell. These are then:
server-name     ARSVR ar-server
username        ARUSR default root
user passwd     ARPWD postgres password
database name   ARDBN default testdb
database passwd ARPASSWORD default 'pleasechangeme'

If you want a different server-name and IP address than ar-server in the ARSVR variable, update the corresponding /etc/hosts and IP address

For example: for the database 'corvid' and user 'raven' edit the update.sh file and remove comment at start of the 'update.sh' file below the first set of comments:
ARUSR=raven
ARDBN=corvid

The output of diff should then be:
$ git diff update.sh
# database name   ARDBN default testdb
# database passwd ARPASSWORD default 'pleasechangeme'

+ARUSR=raven
+ARDBN=corvid
# get passwords and set default values for shell variables
. ./ar-env.sh


4) Set username and passwd as json key-pairs in the ~/.aqlpass file as { "username": "password" } for example:
$ cat .aqlpass
{ "aruser": "dontbedaft", "root": "pleasechangeme" }

A user password needs to be set for the script to run as the ARUSER password is not in ~/.aqlpass file the install will stop

5) Run the create.sh to drop and create a new docker arangodb-instance container, drop and create the new database, create the new user and grant read-write permissions to the database

$ sh ./create.sh
arangodb3-instance
arangodb3-instance
e63950b159eb8e2aef9c03302c947234523ac253e9e0797d5e510ae2fd2b9c4233


6) Following new a release of the 'arangodb' docker image run the 'update.sh' to pull and create a new 'arangodb-instance' database-container
